name: CI

on: [push]

jobs:
  docker: 
    runs-on: ubuntu-latest
    container:
      image: node:latest
      # env:
      #   NODE_ENV: development
      # ports:
      #   - 80
      # volumes:
      #   - my_docker_volume:/volume_mount
      # options: --cpus 1
    steps:
      - name: Run a one-line script
        run: |
          node -v
          npm -v
  # build:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v1
  #   - name: Slack
  #     uses: docker://technosophos/slack-notify
  #     env:
  #       SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
  #       SLACK_MESSAGE: "Hello slack"
  #   - name: My first step
  #     uses: docker://alpine:3.8
  #     with: 
  #       entrypoint: ./somescript.sh
  #       args: 'lllll'
  #   - name: Run a one-line script
  #     run: echo Hello, world!
  #   - name: Fail
  #     run: ecwwho Hello, world!
  #   - name: Run a multi-line script
  #     run: |
  #       echo Add other actions to build,
  #       echo test, and deploy your project.

  # decrypt:

  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v1
  #     - name: Decrypt large secret
  #       run: ./.github/scripts/decrypt_secret.sh
  #       env:
  #         LARGE_SECRET_PASSPHRASE: ${{ secrets.LARGE_SECRET_PASSPHRASE }}
  #     # This command is just an example to show your secret being printed
  #     # Ensure you remove any print statements of your secrets. GitHub does
  #     # not hide secrets that use this workaround.
  #     - name: Test printing your secret (Remove this step in production)
  #       run: cat $HOME/secrets/my_secret.json
  
  # publish:
  #   needs: ['build']

  #   runs-on: windows-latest

  #   steps:
  #   - name: Run a one-line script
  #     run: echo Hello, world!
